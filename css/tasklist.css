/* tasklist.css */
.status-bar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-xl);
}

.date-display h2 {
  font-size: 1.5rem;
  margin-bottom: var(--spacing-xs);
}

.current-date {
  color: var(--text-secondary);
}

.task-counts {
  display: flex;
  gap: var(--spacing-lg);
}

.count-item {
  color: var(--text-secondary);
}

.task-controls {
  display: flex;
  gap: var(--spacing-lg);
  margin-bottom: var(--spacing-xl);
  flex-wrap: wrap;
}

.add-task-btn {
  background-color: var(--primary-color);
  color: white;
  padding: var(--spacing-sm) var(--spacing-lg);
}

.add-task-btn:hover {
  background-color: var(--primary-dark);
}

.task-filters {
  display: flex;
  gap: var(--spacing-md);
  flex-grow: 1;
}

.search-bar {
  flex-grow: 1;
  max-width: 300px;
}

.task-list {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
  min-height: 200px;
  padding: var(--spacing-sm);
}

/* Updated Task Item Styles with completion feedback */
.task-item {
  background-color: var(--background-dark);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius-lg);
  padding: var(--spacing-lg);
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  transition: all 0.3s ease;
  cursor: grab;
  position: relative;
}

/* New completed task styles */
.task-item.completed {
  background-color: var(--background-light);
  opacity: 0.8;
}

.task-item.completed .task-details h3 {
  text-decoration: line-through;
  color: var(--text-secondary);
}

.task-item.completed .task-details p {
  text-decoration: line-through;
  opacity: 0.7;
}

/* Completion animation */
@keyframes taskComplete {
  0% {
      transform: scale(1);
  }
  50% {
      transform: scale(0.98);
  }
  100% {
      transform: scale(1);
  }
}

.task-item.just-completed {
  animation: taskComplete 0.3s ease-in-out;
}

/* Enhanced checkbox styles */
.task-checkbox {
  width: 20px;
  height: 20px;
  cursor: pointer;
  position: relative;
  appearance: none;
  border: 2px solid var(--border-color);
  border-radius: 4px;
  transition: all 0.2s ease;
}

.task-checkbox:checked {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.task-checkbox:checked::after {
  content: '✓';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: white;
  font-size: 12px;
}

/* Empty State Styles */
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl);
  text-align: center;
  color: var(--text-secondary);
}


.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: var(--spacing-xl) var(--spacing-xl);  /* 调整内边距 */
  text-align: center;
  color: var(--text-secondary);
  min-height: 200px; 
}

.empty-state h3 {
  font-size: 1.25rem;
  font-weight: 500;
  margin-bottom: var(--spacing-md);
  color: var(--text-primary);
}

.empty-state p {
  color: var(--text-secondary);
  max-width: 300px;
  margin: 0 auto;
}

/* Pagination Controls */
.pagination-controls {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--spacing-lg) 0;
  border-top: 1px solid var(--border-color);
  margin-top: var(--spacing-xl);
}

.items-per-page {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.items-per-page select {
  width: auto;
  padding: var(--spacing-xs) var(--spacing-sm);
}

.pagination-buttons {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.page-info {
  color: var(--text-secondary);
  font-size: 0.875rem;
}

.pagination-buttons button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Rest of existing styles remain unchanged */
.task-drag-handle {
  color: var(--text-secondary);
  cursor: grab;
  padding: var(--spacing-xs);
  border-radius: var(--border-radius-sm);
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.5;
  transition: all 0.2s ease;
}

/* Continuing from previous styles... */

.task-drag-handle:hover {
  opacity: 1;
  background-color: var(--background-light);
}

/* Dragging States */
.task-item.dragging {
  cursor: grabbing;
  background-color: var(--background-light);
  border: 2px dashed var(--primary-color);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  opacity: 0.9;
}

.task-item.dragging .task-drag-handle {
  cursor: grabbing;
}

.task-item.drag-over {
  border-top: 2px solid var(--primary-color);
  margin-top: var(--spacing-sm);
}

/* Task Content */
.task-content {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  flex-grow: 1;
}

.task-details {
  flex-grow: 1;
}

.task-details h3 {
  margin-bottom: var(--spacing-xs);
  color: var(--text-primary);
  font-size: 1rem;
  font-weight: 500;
}

.task-details p {
  color: var(--text-secondary);
  font-size: 0.875rem;
  margin: 0;
}

/* Task Meta Information */
.task-meta {
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
  flex-shrink: 0;
}

.task-actions {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.priority {
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--border-radius-sm);
  font-size: 0.875rem;
  font-weight: 500;
}

.priority.high {
  background-color: rgba(239, 68, 68, 0.1);
  color: var(--danger-color);
}

.priority.medium {
  background-color: rgba(234, 179, 8, 0.1);
  color: var(--warning-color);
}

.priority.low {
  background-color: rgba(34, 197, 94, 0.1);
  color: var(--success-color);
}

.due-date {
  color: var(--text-secondary);
  font-size: 0.875rem;
}

/* Animation for task changes */
@keyframes taskHighlight {
  0% {
      background-color: rgba(37, 99, 235, 0.1);
  }
  100% {
      background-color: var(--background-dark);
  }
}

.task-item.highlight {
  animation: taskHighlight 1s ease;
}

/* Responsive Design */
@media (max-width: 768px) {
  .task-controls {
      flex-direction: column;
  }

  .task-filters {
      flex-direction: column;
  }

  .search-bar {
      max-width: 100%;
  }

  .task-meta {
      flex-direction: column;
      align-items: flex-end;
      gap: var(--spacing-sm);
  }

  .task-item {
      flex-direction: column;
      align-items: stretch;
  }

  .task-content {
      order: 2;
  }

  .task-drag-handle {
      position: absolute;
      top: var(--spacing-sm);
      left: var(--spacing-sm);
      background-color: var(--background-light);
  }

  .pagination-controls {
      flex-direction: column;
      gap: var(--spacing-md);
      align-items: stretch;
  }

  .items-per-page {
      justify-content: center;
  }

  .pagination-buttons {
      justify-content: center;
  }
}

/* Loading State */
.task-list.loading {
  position: relative;
  min-height: 200px;
}

.task-list.loading::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border: 3px solid var(--border-color);
  border-top-color: var(--primary-color);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
      transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Task Limit Warning */
.task-limit-warning {
  background-color: rgba(234, 179, 8, 0.1);
  border: 1px solid var(--warning-color);
  color: var(--warning-color);
  padding: var(--spacing-md);
  border-radius: var(--border-radius-md);
  margin-bottom: var(--spacing-md);
  display: flex;
  align-items: center;
  gap: var(--spacing-md);
}

.task-limit-warning svg {
  flex-shrink: 0;
}